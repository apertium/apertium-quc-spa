<transfer>
  <section-def-cats>
    <!-- Part of speech categories -->

    <def-cat n="n_rel">
      <cat-item tags="n.rel.*"/>
      <cat-item tags="n.rel"/>
    </def-cat>

    <def-cat n="n">
      <cat-item tags="n.*"/>
      <cat-item tags="n"/>
    </def-cat>

    <def-cat n="det_def">
      <cat-item lemma="ri" tags="det.*"/>
      <cat-item lemma="ri" tags="det"/>
      <cat-item lemma="le" tags="det.*"/>
      <cat-item lemma="le" tags="det"/>
      <cat-item lemma="we" tags="det.*"/>
      <cat-item lemma="we" tags="det"/>
    </def-cat>
    <def-cat n="det_ind">
      <cat-item lemma="jun" tags="num.*"/>
      <cat-item lemma="jun" tags="num"/>
    </def-cat>

    <def-cat n="det">
      <cat-item tags="det.*"/>
      <cat-item tags="det"/>
    </def-cat>
    <def-cat n="pr">
      <cat-item tags="pr.*"/>
      <cat-item tags="pr"/>
    </def-cat>
    <def-cat n="cm">
      <cat-item tags="cm.*"/>
      <cat-item tags="cm"/>
    </def-cat>
    <def-cat n="sent">
      <cat-item tags="sent.*"/>
      <cat-item tags="sent"/>
    </def-cat>
    <def-cat n="adj">
      <cat-item tags="adj.*"/>
      <cat-item tags="adj"/>
    </def-cat>
    <def-cat n="v_iv_inf">
      <cat-item tags="v.iv.inf.*"/>
      <cat-item tags="v.iv.inf"/>
    </def-cat>
    <def-cat n="v_tv_inf">
      <cat-item tags="v.tv.inf.*"/>
      <cat-item tags="v.tv.inf"/>
    </def-cat>

    <def-cat n="v_iv_pp">
      <cat-item tags="v.iv.pp.*"/>
      <cat-item tags="v.iv.pp"/>
    </def-cat>
    <def-cat n="v_tv_pp">
      <cat-item tags="v.tv.pp.*"/>
      <cat-item tags="v.tv.pp"/>
    </def-cat>
    <def-cat n="v_tv">
      <cat-item tags="v.tv.*"/>
    </def-cat>
    <def-cat n="dir">
      <cat-item tags="adv.dir"/>
    </def-cat>

    <def-cat n="adv">
      <cat-item tags="adv.*"/>
      <cat-item tags="adv"/>
    </def-cat>

    <def-cat n="pl">
      <cat-item tags="pl.*"/>
      <cat-item tags="pl"/>
    </def-cat>
    <def-cat n="prn_pers">
      <cat-item tags="prn.pers.*"/>
    </def-cat>
    <def-cat n="part">
      <cat-item tags="part.*"/>
      <cat-item tags="part"/>
    </def-cat>
    <def-cat n="v_iv">
      <cat-item tags="v.iv.*"/>
    </def-cat>
    <def-cat n="prn_dem">
      <cat-item tags="prn.dem.*"/>
      <cat-item tags="prn.dem"/>
    </def-cat>
    <def-cat n="cnjsub">
      <cat-item tags="cnjsub.*"/>
      <cat-item tags="cnjsub"/>
    </def-cat>
    <def-cat n="neg_fin">
      <cat-item tags="neg.fin.*"/>
      <cat-item tags="neg.fin"/>
    </def-cat>
    <def-cat n="neg">
      <cat-item tags="neg.*"/>
      <cat-item tags="neg"/>
    </def-cat>
    <def-cat n="np_ant">
      <cat-item tags="np.ant.*"/>
    </def-cat>
    <def-cat n="mark">
      <cat-item tags="mark.*"/>
      <cat-item tags="mark"/>
    </def-cat>
    <def-cat n="mod">
      <cat-item tags="mod.*"/>
      <cat-item tags="mod"/>
    </def-cat>
    <def-cat n="lquot">
      <cat-item tags="lquot.*"/>
      <cat-item tags="lquot"/>
    </def-cat>
    <def-cat n="rquot">
      <cat-item tags="rquot.*"/>
      <cat-item tags="rquot"/>
    </def-cat>
    <def-cat n="adv_dir">
      <cat-item tags="adv.dir.*"/>
      <cat-item tags="adv.dir"/>
    </def-cat>
    <def-cat n="prn_itg">
      <cat-item tags="prn.itg.*"/>
      <cat-item tags="prn.itg"/>
    </def-cat>
    <def-cat n="ij">
      <cat-item tags="ij.*"/>
      <cat-item tags="ij"/>
    </def-cat>
    <def-cat n="lquest">
      <cat-item tags="lquest.*"/>
      <cat-item tags="lquest"/>
    </def-cat>
    <def-cat n="cnjcoo">
      <cat-item tags="cnjcoo.*"/>
      <cat-item tags="cnjcoo"/>
      <cat-item lemma="e" tags="pl"/> <!-- frequent disambiguation error -->
    </def-cat>
    <def-cat n="np_top">
      <cat-item tags="np.top.*"/>
      <cat-item tags="np.top"/>
    </def-cat>
    <def-cat n="num">
      <cat-item tags="num.*"/>
      <cat-item tags="num"/>
    </def-cat>
    <def-cat n="guio">
      <cat-item tags="guio.*"/>
      <cat-item tags="guio"/>
    </def-cat>
    <def-cat n="prn_pro">
      <cat-item tags="prn.pro.*"/>
    </def-cat>
    <def-cat n="adv_itg">
      <cat-item tags="adv.itg.*"/>
      <cat-item tags="adv.itg"/>
    </def-cat>
    <def-cat n="tajin">
      <cat-item lemma="tajin" tags="aux.*"/>
      <cat-item lemma="tajin" tags="aux"/>
    </def-cat>
    <def-cat n="aux">
      <cat-item tags="aux.*"/>
      <cat-item tags="aux"/>
    </def-cat>
    <def-cat n="clf">
      <cat-item tags="clf.*"/>
      <cat-item tags="clf"/>
    </def-cat>
    <def-cat n="num_ord">
      <cat-item tags="num.ord.*"/>
      <cat-item tags="num.ord"/>
    </def-cat>
    <def-cat n="par">
      <cat-item tags="rpar.*"/>
      <cat-item tags="rpar"/>
      <cat-item tags="lpar.*"/>
      <cat-item tags="lpar"/>
    </def-cat>
    <def-cat n="np_al">
      <cat-item tags="np.al.*"/>
    </def-cat>
    <def-cat n="emph">
      <cat-item tags="emph.*"/>
    </def-cat>
    <def-cat n="np_cog">
      <cat-item tags="np.cog.*"/>
      <cat-item tags="np.cog"/>
    </def-cat>

    <!-- Syntactic categories -->

    <def-cat n="Num">
      <cat-item tags="Num.*"/>
      <cat-item tags="Num"/>
    </def-cat>


    <def-cat n="Clf">
      <cat-item tags="Clf.*"/>
      <cat-item tags="Clf"/>
    </def-cat>

    <def-cat n="Cog">
      <cat-item tags="Cog.*"/>
      <cat-item tags="Cog"/>
    </def-cat>

    <def-cat n="Det">
      <cat-item tags="Det.*"/>
      <cat-item tags="Det"/>
    </def-cat>

    <def-cat n="N">
      <cat-item tags="N.*"/>
      <cat-item tags="N"/>
    </def-cat>

    <def-cat n="Rel">
      <cat-item tags="Rel.*"/>
    </def-cat>
    
    <def-cat n="A">
      <cat-item tags="A.*"/>
      <cat-item tags="A"/>
    </def-cat>

    <!-- Syntactic phrases -->

    <def-cat n="V-TV">
      <cat-item tags="V.tv.*"/>
    </def-cat>

    <def-cat n="V-IV">
      <cat-item tags="V.iv.*"/>
      <cat-item tags="V.iv"/>
    </def-cat>

    <def-cat n="V">
      <cat-item tags="V.*"/>
      <cat-item tags="V"/>
    </def-cat>



    <def-cat n="SA">
      <cat-item tags="SA.*"/>
      <cat-item tags="SA"/>
    </def-cat>

    <def-cat n="Pers">
      <cat-item lemma="yo" tags="SD.*"/>
      <cat-item lemma="tÃº" tags="SD.*"/>
      <cat-item lemma="nosotros" tags="SD.*"/>
      <cat-item lemma="vosotros" tags="SD.*"/>
      <cat-item lemma="usted" tags="SD.*"/>
    </def-cat>

    <def-cat n="Todo">
      <cat-item lemma="todo" tags="Pr.*"/>
      <cat-item lemma="todo" tags="Pr"/>
    </def-cat>

    <def-cat n="Pr">
      <cat-item tags="Pr.*"/>
      <cat-item tags="Pr"/>
    </def-cat>


    <def-cat n="SV">
      <cat-item tags="SV.*"/>
      <cat-item tags="SV"/>
    </def-cat>


    <def-cat n="CN">
      <cat-item tags="CN.*"/>
      <cat-item tags="CN"/>
    </def-cat>


    <def-cat n="SN">
      <cat-item tags="SN.*"/>
      <cat-item tags="SN"/>
    </def-cat>

    <def-cat n="Pl">
      <cat-item tags="Pl.*"/>
      <cat-item tags="Pl"/>
    </def-cat>

    <def-cat n="Ant">
      <cat-item lemma="ant" tags="SD.*"/>
    </def-cat>

    <def-cat n="SD">
      <cat-item tags="SD.*"/>
      <cat-item tags="SD"/>
    </def-cat>

    <def-cat n="CI">
      <cat-item lemma="a" tags="SP.*"/>
    </def-cat>

    <def-cat n="SP">
      <cat-item tags="SP.*"/>
    </def-cat>




  </section-def-cats>

  <section-def-attrs>
    <def-attr n="a_gen">
     <attr-item tags="GD"/>
     <attr-item tags="m"/>
     <attr-item tags="f"/>
    </def-attr>

    <def-attr n="a_gen_mf">
     <attr-item tags="GD"/>
     <attr-item tags="m"/>
     <attr-item tags="f"/>
     <attr-item tags="mf"/>
    </def-attr>

  
    <def-attr n="a_poss">
     <attr-item tags="px1sg"/>
     <attr-item tags="px2sg"/>
     <attr-item tags="px3sg"/>
     <attr-item tags="px1pl"/>
     <attr-item tags="px2pl"/>
     <attr-item tags="px3pl"/>
    </def-attr>

    <def-attr n="a_pers">
     <attr-item tags="p1"/>
     <attr-item tags="p2"/>
     <attr-item tags="p3"/>
    </def-attr>

    <def-attr n="a_nbr_sp">
     <attr-item tags="ND"/>
     <attr-item tags="sg"/>
     <attr-item tags="pl"/>
     <attr-item tags="sp"/>
    </def-attr>


    <def-attr n="a_adv_pr">
     <attr-item tags="pr"/>
     <attr-item tags="adv"/>
    </def-attr>


    <def-attr n="a_nbr">
     <attr-item tags="ND"/>
     <attr-item tags="sg"/>
     <attr-item tags="pl"/>
    </def-attr>

    <def-attr n="a_agr_obj">
     <attr-item tags="o_sg1"/>
     <attr-item tags="o_sg2"/>
     <attr-item tags="o_sg3"/>
     <attr-item tags="o_pl1"/>
     <attr-item tags="o_pl2"/>
     <attr-item tags="o_pl3"/>
    </def-attr>

    <def-attr n="a_agr_subj">
     <attr-item tags="s_sg1"/>
     <attr-item tags="s_sg2"/>
     <attr-item tags="s_sg3"/>
     <attr-item tags="s_pl1"/>
     <attr-item tags="s_pl2"/>
     <attr-item tags="s_pl3"/>
    </def-attr>

    <def-attr n="a_agr">
     <attr-item tags="p1.sg"/>
     <attr-item tags="p2.sg"/>
     <attr-item tags="p3.sg"/>
     <attr-item tags="p1.pl"/>
     <attr-item tags="p2.pl"/>
     <attr-item tags="p3.pl"/>
    </def-attr>
   
    <def-attr n="a_temps">
     <attr-item tags="pri"/>
     <attr-item tags="imp"/>
     <attr-item tags="prs"/>
     <attr-item tags="pis"/>
     <attr-item tags="cni"/>
     <attr-item tags="pii"/>
     <attr-item tags="ifi"/>
    </def-attr>


    <def-attr n="a_imp">
     <attr-item tags="imp.neg"/>
     <attr-item tags="imp"/>
    </def-attr>

    <def-attr n="a_asp">
     <attr-item tags="impf"/>
     <attr-item tags="perf"/>
    </def-attr>

    <def-attr n="a_adjec">
     <attr-item tags="adj"/>
     <attr-item tags="vblex.pp"/>
     <attr-item tags="adv"/>
     <attr-item tags="adj.ord"/>
     <attr-item tags="adj.ind"/>
     <attr-item tags="num.ord"/>
    </def-attr>

    <def-attr n="a_det">
     <attr-item tags="det.def"/>
     <attr-item tags="det.dem"/>
     <attr-item tags="det.ind"/>
    </def-attr>

  
    <def-attr n="a_mov">
     <attr-item tags="abl"/>
     <attr-item tags="lat"/>
    </def-attr>

    <def-attr n="a_ints">
     <attr-item tags="ints"/>
    </def-attr>

    <def-attr n="a_inv">
     <attr-item tags="inv"/>
    </def-attr>

    <def-attr n="a_pass">
     <attr-item tags="pass"/>
     <attr-item tags="pass.stat"/>
    </def-attr>

    <def-attr n="a_anti">
     <attr-item tags="anti"/>
     <attr-item tags="anti.agfoc"/>
    </def-attr>

    <def-attr n="a_pron">
     <attr-item tags="pron"/>
    </def-attr>

    <def-attr n="a_sust">
     <attr-item tags="n"/>
     <attr-item tags="n.rel"/>
    </def-attr>

    <def-attr n="a_func">
     <attr-item tags="@det"/>
     <attr-item tags="@acl"/>
    </def-attr>

    <def-attr n="a_prep">
     <attr-item tags="adv"/>
     <attr-item tags="pr"/>
    </def-attr>

    <def-attr n="a_phrase">
     <attr-item tags="SD"/>
     <attr-item tags="SA"/>
     <attr-item tags="SN"/>
     <attr-item tags="SV"/>
    </def-attr>

    <def-attr n="a_pred">
     <attr-item tags="adj.pred"/>
     <attr-item tags="adj"/>
    </def-attr>

 
  </section-def-attrs>

  <section-def-vars>
    <!-- "Anaphora tracking": Last seen values must be m/f sg/pl -->
    <def-var n="genero"/>
    <def-var n="numero"/>

    <!-- !!!! Verb chunk internal !!!! -->
    <!-- Chunk values, can be GD/ND -->
    <def-var n="chunkGenero"/>
    <def-var n="chunkNumero"/>
    <def-var n="chunkPoss"/>
    <!-- Name of the current chunk -->
    <def-var n="chunkName"/>
    <!-- Chunk agreement -->
    <def-var n="chunkAgrObj"/>
    <def-var n="chunkAgrSubj"/>
    <!-- Negation -->
    <def-var n="negaciÃ³n"/>
    <!-- Copula -->
    <def-var n="copula"/>

    <def-var n="prepPron"/>
    <def-var n="refPron"/>
    <def-var n="auxVerb"/>
    <def-var n="predicate"/>
    <def-var n="prepDe"/>
  </section-def-vars>

  <section-def-macros>

    <def-macro n="f_build_copula1" npar="1">  
      <let><var n="copula"/><concat><lit v="ser"/><lit-tag v="vbser.pri"/>
                                    <clip pos="1" side="tl" part="a_pers"/>
                                    <clip pos="1" side="tl" part="a_nbr"/> </concat></let>
    </def-macro>


    <def-macro n="f_set_chunk_name1" npar="1">  
      <choose>
        <when><test><equal><clip pos="1" side="tl" part="lem"/><lit v=""/></equal></test>
              <let><var n="chunkName"/><clip pos="1" side="sl" part="lem"/></let></when>
        <otherwise>
               <let><var n="chunkName"/><clip pos="1" side="tl" part="lem"/></let>
        </otherwise>
      </choose>
      <let><clip pos="1" side="tl" part="a_func"/><lit v=""/></let>
    </def-macro>

    <def-macro n="f_set_chunk_poss1" npar="1">  
      <let><var n="chunkPoss"/><clip pos="1" side="tl" part="a_poss"/></let>
      <let><clip pos="1" side="tl" part="a_poss"/><lit v=""/></let>
    </def-macro>

    <def-macro n="f_concord1" npar="1">
      <choose>
        <when><test><equal><clip pos="1" side="tl" part="a_gen_mf"/><lit-tag v="mf"/></equal></test>
              <let><var n="chunkGenero"/><lit-tag v="GD"/></let>
        </when>
        <otherwise>
              <let><var n="chunkGenero"/><clip pos="1" side="tl" part="a_gen"/></let>
              <let><clip pos="1" side="tl" part="a_gen"/><lit-tag v="2"/></let>
        </otherwise>
      </choose>
      <choose>
        <when><test><equal><clip pos="1" side="tl" part="a_nbr_sp"/><lit-tag v="sp"/></equal></test>
              <let><var n="chunkNumero"/><lit-tag v="ND"/></let>
        </when>
        <otherwise>
              <let><var n="chunkNumero"/><clip pos="1" side="tl" part="a_nbr"/></let>
              <let><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="3"/></let>
        </otherwise>
      </choose>
    </def-macro>

    <def-macro n="f_concord2" npar="2">
      <!-- pos 1: head, pos 2: dependent -->
      <choose> <!-- When the head is m/f and the dependent is GD, let the gender of the dependent be that of the head -->
        <when><test><and><equal><clip pos="2" side="tl" part="a_gen_mf"/><lit-tag v="GD"/></equal>
                         <not><equal><clip pos="1" side="tl" part="a_gen_mf"/><lit v=""/></equal></not>
                         <not><equal><clip pos="1" side="tl" part="a_gen_mf"/><lit-tag v="mf"/></equal></not></and></test>
        <let><clip pos="2" side="tl" part="a_gen_mf"/><lit-tag v="2"/></let></when><!--<clip pos="1" side="tl" part="a_gen_mf"/>-->
      </choose> 
      <choose> <!-- When the head is sg/pl and the dependent is ND, let the gender of the dependent be that of the head -->
        <when><test><and><equal><clip pos="2" side="tl" part="a_nbr_sp"/><lit-tag v="ND"/></equal>
                         <!--<not><equal><clip pos="1" side="tl" part="a_nbr_sp"/><lit-tag v="ND"/></equal></not>-->
                         <not><equal><clip pos="1" side="tl" part="a_nbr_sp"/><lit v=""/></equal></not>
                         <not><equal><clip pos="1" side="tl" part="a_nbr_sp"/><lit-tag v="sp"/></equal></not></and></test>
        <let><clip pos="2" side="tl" part="a_nbr_sp"/><lit-tag v="3"/></let></when><!--<clip pos="1" side="tl" part="a_nbr_sp"/>-->
      </choose> 
      <call-macro n="f_concord1"><with-param pos="1"/></call-macro>
    </def-macro>

    <def-macro n="f_set_plural1" npar="1">
      <let><clip pos="1" side="tl" part="a_nbr"/><lit-tag v="pl"/></let>
      <call-macro n="f_concord1"><with-param pos="1"/></call-macro>
      <choose> <!-- When the head is sg/pl and the dependent is ND, let the gender of the dependent be that of the head -->
        <when><test><and><equal><clip pos="1" side="tl" part="a_nbr_sp"/><lit-tag v="ND"/></equal>
                         <!--<not><equal><clip pos="1" side="tl" part="a_nbr_sp"/><lit-tag v="ND"/></equal></not>-->
                         <not><equal><clip pos="1" side="tl" part="a_nbr_sp"/><lit-tag v="sp"/></equal></not></and></test>
        <let><clip pos="1" side="tl" part="a_nbr_sp"/><lit-tag v="3"/></let></when><!--<clip pos="1" side="tl" part="a_nbr_sp"/>-->
      </choose> 
    </def-macro>


    <def-macro n="f_concord_obj2" npar="2">
      <!-- Concord an object with its verb -->
      <choose>
        <when><test><and><equal><clip pos="2" side="tl" part="a_nbr_sp"/><lit-tag v="ND"/></equal>
                         <or><equal><clip pos="1" side="tl" part="a_agr_obj"/><lit-tag v="o_sg1"/></equal>
                             <equal><clip pos="1" side="tl" part="a_agr_obj"/><lit-tag v="o_sg2"/></equal>
                             <equal><clip pos="1" side="tl" part="a_agr_obj"/><lit-tag v="o_sg3"/></equal></or></and></test>
        <let><clip pos="2" side="tl" part="a_nbr"/><lit-tag v="sg"/></let></when>
        <when><test><and><equal><clip pos="2" side="tl" part="a_nbr_sp"/><lit-tag v="ND"/></equal>
                         <or><equal><clip pos="1" side="tl" part="a_agr_obj"/><lit-tag v="o_pl1"/></equal>
                             <equal><clip pos="1" side="tl" part="a_agr_obj"/><lit-tag v="o_pl2"/></equal>
                             <equal><clip pos="1" side="tl" part="a_agr_obj"/><lit-tag v="o_pl3"/></equal></or></and></test>
        <let><clip pos="2" side="tl" part="a_nbr"/><lit-tag v="pl"/></let></when>
      </choose> 
    </def-macro>

    <def-macro n="f_concord_subj2" npar="2">
      <!-- Concord an subject with its verb -->
      <choose>
        <when><test><and><equal><clip pos="2" side="tl" part="a_nbr_sp"/><lit-tag v="ND"/></equal>
                         <or><equal><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="s_sg1"/></equal>
                             <equal><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="s_sg2"/></equal>
                             <equal><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="s_sg3"/></equal></or></and></test>
        <let><clip pos="2" side="tl" part="a_nbr"/><lit-tag v="sg"/></let></when>
        <when><test><and><equal><clip pos="2" side="tl" part="a_nbr_sp"/><lit-tag v="ND"/></equal>
                         <or><equal><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="s_pl1"/></equal>
                             <equal><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="s_pl2"/></equal>
                             <equal><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="s_pl3"/></equal></or></and></test>
        <let><clip pos="2" side="tl" part="a_nbr"/><lit-tag v="pl"/></let></when>
      </choose> 
    </def-macro>

    <def-macro n="f_agr_fin_verb1" npar="1">
        <choose><when><test><and><equal><clip pos="1" side="tl" part="a_inv"/><lit-tag v="inv"/></equal>
                                 <not><equal><clip pos="1" side="sl" part="a_agr_obj"/><lit v=""/></equal></not></and></test>
                      <let><var n="chunkAgrSubj"/><clip pos="1" side="sl" part="a_agr_obj"/></let> <!-- prol doesn't work -->
                      <let><var n="chunkAgrObj"/><clip pos="1" side="sl" part="a_agr_subj"/></let>
                      <choose>
                        <when><test><equal><clip pos="1" side="sl" part="a_agr_obj"/><lit-tag v="o_sg1"/></equal></test>
                                    <let><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="p1.sg"/></let></when>
                        <when><test><equal><clip pos="1" side="sl" part="a_agr_obj"/><lit-tag v="o_sg2"/></equal></test>
                                    <let><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="p2.sg"/></let></when>
                        <when><test><equal><clip pos="1" side="sl" part="a_agr_obj"/><lit-tag v="o_sg3"/></equal></test>
                                    <let><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="p3.sg"/></let></when>
                        <when><test><equal><clip pos="1" side="sl" part="a_agr_obj"/><lit-tag v="o_pl1"/></equal></test>
                                    <let><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="p1.pl"/></let></when>
                        <when><test><equal><clip pos="1" side="sl" part="a_agr_obj"/><lit-tag v="o_pl2"/></equal></test>
                                    <!--<let><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="p2.pl"/></let></when>-->
                                    <let><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="p3.pl"/></let></when>
                        <when><test><equal><clip pos="1" side="sl" part="a_agr_obj"/><lit-tag v="o_pl3"/></equal></test>
                                    <let><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="p3.pl"/></let></when>
                      </choose>
                </when>
                <otherwise>
                      <let><var n="chunkAgrObj"/><clip pos="1" side="sl" part="a_agr_obj"/></let>
                      <let><var n="chunkAgrSubj"/><clip pos="1" side="sl" part="a_agr_subj"/></let>
                      <choose>
                        <when><test><equal><clip pos="1" side="sl" part="a_agr_subj"/><lit-tag v="s_sg1"/></equal></test>
                                    <let><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="p1.sg"/></let></when>
                        <when><test><equal><clip pos="1" side="sl" part="a_agr_subj"/><lit-tag v="s_sg2"/></equal></test>
                                    <let><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="p2.sg"/></let></when>
                        <when><test><equal><clip pos="1" side="sl" part="a_agr_subj"/><lit-tag v="s_sg3"/></equal></test>
                                    <let><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="p3.sg"/></let></when>
                        <when><test><equal><clip pos="1" side="sl" part="a_agr_subj"/><lit-tag v="s_pl1"/></equal></test>
                                    <let><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="p1.pl"/></let></when>
                        <when><test><equal><clip pos="1" side="sl" part="a_agr_subj"/><lit-tag v="s_pl2"/></equal></test>
                                    <!--<let><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="p2.pl"/></let></when>-->
                                    <let><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="p3.pl"/></let></when>
                        <when><test><equal><clip pos="1" side="sl" part="a_agr_subj"/><lit-tag v="s_pl3"/></equal></test>
                                    <let><clip pos="1" side="tl" part="a_agr_subj"/><lit-tag v="p3.pl"/></let></when>
                      </choose>
                </otherwise>
      </choose>
      <let><clip pos="1" side="tl" part="a_inv"/><lit v=""/></let>
      <let><clip pos="1" side="tl" part="a_agr_obj"/><lit v=""/></let>
    </def-macro>

    <def-macro n="f_conj_fin_verb1" npar="1"> <!-- Do something with determiners -->
      <choose>
        <when><test><equal><clip pos="1" side="sl" part="a_asp"/><lit-tag v="impf"/></equal></test>
                    <let><clip pos="1" side="tl" part="a_asp"/><lit-tag v="pri"/></let></when>
        <when><test><equal><clip pos="1" side="sl" part="a_asp"/><lit-tag v="perf"/></equal></test>
                    <let><clip pos="1" side="tl" part="a_asp"/><lit-tag v="ifi"/></let></when>
        <when><test><equal><clip pos="1" side="sl" part="a_imp"/><lit-tag v="imp.neg"/></equal></test>
                    <let><var n="negaciÃ³n"/><concat><lit v="no"/><lit-tag v="adv"/></concat></let>
                    <let><clip pos="1" side="tl" part="a_imp"/><lit-tag v="prs"/></let></when>
      </choose>
      <let><clip pos="1" side="tl" part="a_mov"/><lit v=""/></let>
    </def-macro>

    <def-macro n="f_poss_to_pron1" npar="1">
<!--
      <e r="LR"><par n="N"/><p><l>pam<s n="n"/><s n="rel"/><s n="px1sg"/></l><r>mÃ­<s n="prn"/><s n="tn"/><s n="p1"/><s n="mf"/><s n="sg"/></r></p></e>
      <e r="LR"><par n="N"/><p><l>pam<s n="n"/><s n="rel"/><s n="px1pl"/></l><r>nosotros<s n="prn"/><s n="tn"/><s n="p1"/><s n="GD"/><s n="pl"/></r></p></e>
      <e r="LR"><par n="N"/><p><l>pam<s n="n"/><s n="rel"/><s n="px2sg"/></l><r>ti<s n="prn"/><s n="tn"/><s n="p2"/><s n="mf"/><s n="sg"/></r></p></e>
      <e r="LR"><par n="N"/><p><l>pam<s n="n"/><s n="rel"/><s n="px2pl"/></l><r>vosotros<s n="prn"/><s n="tn"/><s n="p2"/><s n="GD"/><s n="pl"/></r></p></e>
      <e r="LR"><par n="N"/><p><l>pam<s n="n"/><s n="rel"/><s n="px3sg"/></l><r>Ã©l<s n="prn"/><s n="tn"/><s n="p3"/><s n="GD"/><s n="sg"/></r></p></e>
      <e r="LR"><par n="N"/><p><l>pam<s n="n"/><s n="rel"/><s n="px3pl"/></l><r>Ã©l<s n="prn"/><s n="tn"/><s n="p3"/><s n="GD"/><s n="pl"/></r></p></e>
-->
      <!-- fix gender for Ã©l, nosotros, Ã©l+Pl -->
      <choose><when><test><equal><clip pos="1" side="tl" part="a_poss"/><lit-tag v="px1sg"/></equal></test>
                    <let><var n="prepPron"/><concat><lit v="mÃ­"/><lit-tag v="prn.tn.p1.mf.sg"/></concat></let></when>
              <when><test><equal><clip pos="1" side="tl" part="a_poss"/><lit-tag v="px2sg"/></equal></test>
                    <let><var n="prepPron"/><concat><lit v="ti"/><lit-tag v="prn.tn.p2.mf.sg"/></concat></let></when>
              <when><test><equal><clip pos="1" side="tl" part="a_poss"/><lit-tag v="px3sg"/></equal></test>
                    <let><var n="prepPron"/><concat><lit v="Ã©l"/><lit-tag v="prn.tn.p3.GD.sg"/></concat></let></when>
              <when><test><equal><clip pos="1" side="tl" part="a_poss"/><lit-tag v="px1pl"/></equal></test>
                    <let><var n="prepPron"/><concat><lit v="nosotros"/><lit-tag v="prn.tn.p1.GD.pl"/></concat></let></when>
              <when><test><equal><clip pos="1" side="tl" part="a_poss"/><lit-tag v="px2pl"/></equal></test>
                    <let><var n="prepPron"/><concat><lit v="usted"/><lit-tag v="prn.tn.p3.mf.pl"/></concat></let></when>
              <when><test><equal><clip pos="1" side="tl" part="a_poss"/><lit-tag v="px3pl"/></equal></test>
                    <let><var n="prepPron"/><concat><lit v="Ã©l"/><lit-tag v="prn.tn.p3.GD.pl"/></concat></let></when>
              <otherwise>
                    <let><var n="prepPron"/><lit v=""/></let>
              </otherwise>
      </choose>
      <let><clip pos="1" side="tl" part="a_poss"/><lit v=""/></let>
    </def-macro>


    <def-macro n="f_gen_ref_pron1" npar="1">
      <let><var n="refPron"/><lit v=""/></let>
      <choose><when>
                <test><or><equal><clip pos="1" side="tl" part="a_pron"/><lit-tag v="pron"/></equal>
                          <equal><clip pos="1" side="tl" part="a_pass"/><lit-tag v="pass"/></equal></or></test>
      <choose>
        <when><test><equal><clip pos="1" side="sl" part="a_agr_subj"/><lit-tag v="s_sg1"/></equal></test>
                    <let><var n="refPron"/><concat><lit v="me"/><lit-tag v="prn.pro.p1.mf.sg"/></concat></let></when>
        <when><test><equal><clip pos="1" side="sl" part="a_agr_subj"/><lit-tag v="s_sg2"/></equal></test>
                    <let><var n="refPron"/><concat><lit v="te"/><lit-tag v="prn.pro.p2.mf.sg"/></concat></let></when>
        <when><test><equal><clip pos="1" side="sl" part="a_agr_subj"/><lit-tag v="s_pl1"/></equal></test>
                    <let><var n="refPron"/><concat><lit v="nos"/><lit-tag v="prn.pro.p1.mf.pl"/></concat></let></when>
        <when><test><equal><clip pos="1" side="sl" part="a_agr_subj"/><lit-tag v="s_pl2"/></equal></test>
                    <!--<let><var n="refPron"/><concat><lit v="os"/><lit-tag v="prn.pro.p2.mf.pl"/></concat></let></when>-->
                    <!--<let><var n="refPron"/><concat><lit v="le"/><lit-tag v="prn.pro.p3.mf.pl"/></concat></let></when>-->
                    <let><var n="refPron"/><concat><lit v="se"/><lit-tag v="prn.pro.ref.p3.mf.sp"/></concat></let></when>
        <otherwise>
                    <let><var n="refPron"/><concat><lit v="se"/><lit-tag v="prn.pro.ref.p3.mf.sp"/></concat></let>
        </otherwise>
      </choose></when></choose>
      <let><clip pos="1" side="tl" part="a_pron"/><lit v=""/></let>
      <let><clip pos="1" side="tl" part="a_pass"/><lit v=""/></let>
    </def-macro>

    <def-macro n="f_build_verb1" npar="1">
      <let><var n="predicate"/><lit v=""/></let>
      <let><var n="auxVerb"/><lit v=""/></let>
      <choose>
        <when><test><equal><clip pos="1" side="tl" part="a_pred"/><lit-tag v="adj.pred"/></equal></test>
     
          <let><var n="auxVerb"/><concat><lit v="estar"/><lit-tag v="vblex"/>
                                           <clip pos="1" side="tl" part="a_temps"/>
                                           <clip pos="1" side="tl" part="a_agr"/></concat></let>
          <let><var n="predicate"/><concat><clip pos="1" side="tl" part="lem"/>
                                           <lit-tag v="adj"/><clip pos="1" side="tl" part="a_gen_mf"/><lit-tag v="ND"/></concat></let>
        </when>
        <otherwise>
          <let><var n="predicate"/><clip pos="1" side="tl" part="whole"/></let>
        </otherwise>
      </choose>
    </def-macro>

    <def-macro n="f_apply_prep1" npar="1">
      <let><var n="prepDe"/><lit v=""/></let>
      <choose>
        <when><test><equal><clip pos="1" side="tl" part="a_adv_pr"/><lit-tag v="adv"/></equal></test>
              <let><var n="prepDe"/><concat><lit v="de"/><lit-tag v="pr"/></concat></let>
        </when>
      </choose>
    </def-macro>
  </section-def-macros>

  <section-rules>


  <rule comment="SV SD" firstChunk="S">
   <pattern>
    <pattern-item n="SV"/>
    <pattern-item n="SD"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord_subj2"><with-param pos="1"/><with-param pos="2"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="S.tv"/></tag>
         <tag><clip pos="1" side="sl" part="a_agr_subj"/></tag>
         <tag><clip pos="1" side="sl" part="a_agr_obj"/></tag>
        </tags>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
        <b/>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>


  <rule comment="SD SV" firstChunk="S">
   <pattern>
    <pattern-item n="SD"/>
    <pattern-item n="SV"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="2"/></call-macro>
      <call-macro n="f_concord_subj2"><with-param pos="2"/><with-param pos="1"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="S.tv"/></tag>
         <tag><clip pos="2" side="sl" part="a_agr_subj"/></tag>
         <tag><clip pos="2" side="sl" part="a_agr_obj"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
        <b/>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="Pers SD" firstChunk="SV">
   <pattern>
    <pattern-item n="Pers"/>
    <pattern-item n="SD"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_build_copula1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord2"><with-param pos="1"/><with-param pos="2"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="SV.GD"/></tag> <!-- lol this needs to be fixed -->
         <tag><var n="chunkNumero"/></tag>
         <tag><clip pos="1" side="tl" part="a_agr_subj"/></tag>
         <tag><clip pos="1" side="tl" part="a_agr_obj"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
        <b/>
        <lu><var n="copula"/></lu>
        <b/>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="V-TV CI" firstChunk="SV">
   <pattern>
    <pattern-item n="V-TV"/>
    <pattern-item n="CI"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord_obj2"><with-param pos="1"/><with-param pos="2"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="SV.tv"/></tag>
         <tag><clip pos="1" side="tl" part="a_agr_subj"/></tag>
         <tag><clip pos="1" side="tl" part="a_agr_obj"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
        <b/>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>


  <rule comment="V-IV SP" firstChunk="SV">
   <pattern>
    <pattern-item n="V-IV"/>
    <pattern-item n="SP"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <!--<call-macro n="f_concord_obj2"><with-param pos="1"/><with-param pos="2"/></call-macro>-->
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="SV.tv"/></tag>
         <tag><clip pos="1" side="tl" part="a_agr_subj"/></tag>
         <tag><clip pos="1" side="tl" part="a_agr_obj"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
        <b/>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>


  <rule comment="V-TV SD" firstChunk="SV">
   <pattern>
    <pattern-item n="V-TV"/>
    <pattern-item n="SD"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord_obj2"><with-param pos="1"/><with-param pos="2"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="SV.tv"/></tag>
         <tag><clip pos="1" side="tl" part="a_agr_subj"/></tag>
         <tag><clip pos="1" side="tl" part="a_agr_obj"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
        <b/>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="V neg_fin" firstChunk="V">
   <pattern>
    <pattern-item n="V"/>
    <pattern-item n="neg_fin"/>
   </pattern>
   <action>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><clip pos="1" side="tl" part="tags"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>


  <rule comment="neg V" firstChunk="V">
   <pattern>
    <pattern-item n="neg"/>
    <pattern-item n="V"/>
   </pattern>
   <action>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><clip pos="2" side="tl" part="tags"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
        <b/>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>


  <rule comment="V mod" firstChunk="V">
   <pattern>
    <pattern-item n="V"/>
    <pattern-item n="mod"/>
   </pattern>
   <action>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><clip pos="1" side="tl" part="tags"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="V dir" firstChunk="V">
   <pattern>
    <pattern-item n="V"/>
    <pattern-item n="dir"/>
   </pattern>
   <action>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><clip pos="1" side="tl" part="tags"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>


  <rule comment="V mark" firstChunk="V">
   <pattern>
    <pattern-item n="V"/>
    <pattern-item n="mark"/>
   </pattern>
   <action>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><clip pos="1" side="tl" part="tags"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>


  <rule comment="v_iv_inf" firstChunk="V">
   <pattern>
    <pattern-item n="v_iv_inf"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_agr_fin_verb1"><with-param pos="1"/></call-macro>
      <!--<call-macro n="f_conj_fin_verb1"><with-param pos="1"/></call-macro>-->
      <!--<call-macro n="f_gen_ref_pron1"><with-param pos="1"/></call-macro>-->
      <let><clip pos="1" side="tl" part="a_agr"/><lit v=""/></let>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="V.iv.inf"/></tag>
         <tag><var n="chunkAgrSubj"/></tag>
         <tag><var n="chunkAgrObj"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>


  <rule comment="v_tv_inf" firstChunk="V">
   <pattern>
    <pattern-item n="v_tv_inf"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_agr_fin_verb1"><with-param pos="1"/></call-macro>
      <!--<call-macro n="f_conj_fin_verb1"><with-param pos="1"/></call-macro>-->
      <!--<call-macro n="f_gen_ref_pron1"><with-param pos="1"/></call-macro>-->
      <let><clip pos="1" side="tl" part="a_agr"/><lit v=""/></let>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="V.tv.inf"/></tag>
         <tag><var n="chunkAgrSubj"/></tag>
         <tag><var n="chunkAgrObj"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>



  <rule comment="tajin v_tv" firstChunk="V">
   <pattern>
    <pattern-item n="tajin"/>
    <pattern-item n="v_tv"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="2"/></call-macro>
      <call-macro n="f_agr_fin_verb1"><with-param pos="2"/></call-macro>
      <call-macro n="f_conj_fin_verb1"><with-param pos="2"/></call-macro>
      <call-macro n="f_gen_ref_pron1"><with-param pos="2"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="V.tv"/></tag>
         <tag><var n="chunkAgrSubj"/></tag>
         <tag><var n="chunkAgrObj"/></tag>
        </tags>
        <lu> <var n="negaciÃ³n"/></lu><b/>
        <lu> <var n="refPron"/></lu><b/>
        <lu> <lit v="estar"/><clip pos="2" side="tl" part="tags"/></lu><b/>
        <lu> <clip pos="2" side="tl" part="lem"/><lit-tag v="vblex.ger"/></lu>
       </chunk>
      </out>
   </action>
  </rule>



  <rule comment="v_tv" firstChunk="V">
   <pattern>
    <pattern-item n="v_tv"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_agr_fin_verb1"><with-param pos="1"/></call-macro>
      <call-macro n="f_conj_fin_verb1"><with-param pos="1"/></call-macro>
      <call-macro n="f_gen_ref_pron1"><with-param pos="1"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="V.tv"/></tag>
         <tag><var n="chunkAgrSubj"/></tag>
         <tag><var n="chunkAgrObj"/></tag>
        </tags>
        <lu> <var n="negaciÃ³n"/></lu><b/>
        <lu> <var n="refPron"/></lu><b/>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="v_iv" firstChunk="V">
   <pattern>
    <pattern-item n="v_iv"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_agr_fin_verb1"><with-param pos="1"/></call-macro>
      <call-macro n="f_conj_fin_verb1"><with-param pos="1"/></call-macro>
      <call-macro n="f_gen_ref_pron1"><with-param pos="1"/></call-macro>
      <call-macro n="f_build_verb1"><with-param pos="1"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="V.iv"/></tag>
         <tag><var n="chunkAgrSubj"/></tag>
        </tags>
        <lu> <var n="negaciÃ³n"/></lu><b/>
        <lu> <var n="refPron"/></lu><b/>
        <lu> <var n="auxVerb"/></lu><b/>
        <lu> <var n="predicate"/></lu><b/>
       </chunk>
      </out>
   </action>
  </rule>


  <rule comment="det_ind SN" firstChunk="SD">
   <pattern>
    <pattern-item n="det_ind"/>
    <pattern-item n="SN"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord2"><with-param pos="2"/><with-param pos="1"/></call-macro>
      <call-macro n="f_set_chunk_poss1"><with-param pos="2"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="SD"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
         <tag><var n="chunkPoss"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
        <b/>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="SN SD" firstChunk="SD">
   <pattern>
    <pattern-item n="SN"/>
    <pattern-item n="SD"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord1"><with-param pos="1"/></call-macro>
      <call-macro n="f_set_chunk_poss1"><with-param pos="1"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="SD"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
        </tags>
        <lu><lit v="el"/><lit-tag v="det.def.2.3"/></lu>
        <b/>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
        <b/>
        <lu><lit v="de"/><lit-tag v="pr"/></lu>
        <b/>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>


  <rule comment="SD CN" firstChunk="SP">
   <pattern>
    <pattern-item n="SD"/>
    <pattern-item n="CN"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord1"><with-param pos="1"/></call-macro>
      <call-macro n="f_set_chunk_poss1"><with-param pos="1"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="SD"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
         <tag><var n="chunkPoss"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
        <b/>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>



  <rule comment="cnjcoo SD" firstChunk="CN">
   <pattern>
    <pattern-item n="cnjcoo"/>
    <pattern-item n="SD"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="2"/></call-macro>
      <call-macro n="f_concord1"><with-param pos="2"/></call-macro>
      <call-macro n="f_set_chunk_poss1"><with-param pos="2"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="CN"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
         <tag><var n="chunkPoss"/></tag>
        </tags>
        <lu><lit v="y"/><lit-tag v="cnjcoo"/></lu>
        <b/>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="Pr SD" firstChunk="SP">
   <pattern>
    <pattern-item n="Pr"/>
    <pattern-item n="SD"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord1"><with-param pos="2"/></call-macro>
      <call-macro n="f_apply_prep1"><with-param pos="1"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="SP"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="lem"/><clip pos="1" side="tl" part="a_adv_pr"/>  </lu><b/>
        <lu><var n="prepDe"/></lu><b/>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="Todo SN" firstChunk="SP">
   <pattern>
    <pattern-item n="Todo"/>
    <pattern-item n="SN"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord1"><with-param pos="2"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="SP"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="lem"/><lit-tag v="predet.2.3"/> </lu>
        <b/>
        <lu><lit v="el"/><lit-tag v="det.def.2.3"/> </lu>
        <b/>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="Pr SN" firstChunk="SP">
   <pattern>
    <pattern-item n="Pr"/>
    <pattern-item n="SN"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord1"><with-param pos="2"/></call-macro>
      <call-macro n="f_apply_prep1"><with-param pos="1"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="SP"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="lem"/><clip pos="1" side="tl" part="a_adv_pr"/>  </lu>
        <lu><var n="prepDe"/></lu><b/>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>


  <rule comment="det_def SN" firstChunk="SD">
   <pattern>
    <pattern-item n="det_def"/>
    <pattern-item n="SN"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord2"><with-param pos="2"/><with-param pos="1"/></call-macro>
      <call-macro n="f_set_chunk_poss1"><with-param pos="2"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="SD"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
         <tag><var n="chunkPoss"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
        <b/>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>


  <rule comment="A SN" firstChunk="SN">
   <pattern>
    <pattern-item n="SN"/>
    <pattern-item n="A"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="2"/></call-macro>
      <call-macro n="f_concord2"><with-param pos="1"/><with-param pos="2"/></call-macro>
      <call-macro n="f_set_chunk_poss1"><with-param pos="1"/></call-macro>
      <out>
       <chunk name="n_a">
        <tags>
         <tag><lit-tag v="SN"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
         <tag><var n="chunkPoss"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
        <b/>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>


  <rule comment="A SN" firstChunk="SN">
   <pattern>
    <pattern-item n="A"/>
    <pattern-item n="SN"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord2"><with-param pos="2"/><with-param pos="1"/></call-macro>
      <call-macro n="f_set_chunk_poss1"><with-param pos="2"/></call-macro>
      <out>
       <chunk name="a_n">
        <tags>
         <tag><lit-tag v="SN"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
         <tag><var n="chunkPoss"/></tag>
        </tags>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
        <b/>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="Pl SD" firstChunk="SD">
   <pattern>
    <pattern-item n="Pl"/>
    <pattern-item n="SD"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_set_plural1"><with-param pos="2"/></call-macro>
      <call-macro n="f_set_chunk_poss1"><with-param pos="2"/></call-macro>
      <out>
       <chunk name="n">
        <tags>
         <tag><lit-tag v="SN"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
         <tag><var n="chunkPoss"/></tag>
        </tags>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>


  <rule comment="Pl SN" firstChunk="SN">
   <pattern>
    <pattern-item n="Pl"/>
    <pattern-item n="SN"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_set_plural1"><with-param pos="2"/></call-macro>
      <call-macro n="f_set_chunk_poss1"><with-param pos="2"/></call-macro>
      <out>
       <chunk name="n">
        <tags>
         <tag><lit-tag v="SN"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
         <tag><var n="chunkPoss"/></tag>
        </tags>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>



  <rule comment="N" firstChunk="SN">
   <pattern>
    <pattern-item n="N"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord1"><with-param pos="1"/></call-macro>
      <call-macro n="f_set_chunk_poss1"><with-param pos="1"/></call-macro>
      <out>
       <chunk name="n">
        <tags>
         <tag><lit-tag v="SN"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
         <tag><var n="chunkPoss"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="prn_dem" firstChunk="SD"> <!-- We probably want to save the determiner info somewhere --> 
   <pattern>
    <pattern-item n="prn_dem"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord1"><with-param pos="1"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="SD"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
         <tag><clip pos="1" side="tl" part="a_pers"/> </tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>


  <rule comment="prn_pers" firstChunk="SD"> <!-- We probably want to save the determiner info somewhere --> 
   <pattern>
    <pattern-item n="det_def"/>
    <pattern-item n="prn_pers"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="2"/></call-macro>
      <call-macro n="f_concord1"><with-param pos="2"/></call-macro>
        <let> <clip pos="2" side="tl" part="lem"/><get-case-from pos="1"><clip pos="2" side="tl" part="lem"/></get-case-from> </let>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="SD"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
         <tag><clip pos="1" side="tl" part="a_pers"/> </tag>
        </tags>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="prn_pers" firstChunk="SD"> <!-- Ajawxel, ri in kinwilo che ri at, at jun qÊ¼axal utzij ri Dyos. -->
   <!-- Maybe we want to say that this second 'at' is a proclitic agreement pronoun ? -->
   <pattern>
    <pattern-item n="prn_pers"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord1"><with-param pos="1"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="SD"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
         <tag><clip pos="1" side="tl" part="a_pers"/> </tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>



  <rule comment="adj" firstChunk="A">
   <pattern>
    <pattern-item n="adj"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord1"><with-param pos="1"/></call-macro>
      <out>
       <chunk name="a">
        <tags>
         <tag><lit-tag v="A"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>
  <rule comment="pr Pr" firstChunk="Pr">
   <pattern>
    <pattern-item n="pr"/>
    <pattern-item n="Pr"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="2"/></call-macro>
      <!--<call-macro n="f_poss_to_pron1"><with-param pos="2"/></call-macro>-->
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="Pr"/></tag>
         <tag> <clip pos="2" side="sl" part="tags"/> </tag>
        </tags>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="pr" firstChunk="Pr">
   <pattern>
    <pattern-item n="pr"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="Pr"/></tag>
         <tag> <clip pos="1" side="sl" part="tags"/> </tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>


  <rule comment="n_rel" firstChunk="Pr">
   <pattern>
    <pattern-item n="n_rel"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_poss_to_pron1"><with-param pos="1"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="Pr"/></tag>
         <tag> <clip pos="1" side="tl" part="tags"/> </tag>
         <tag> <clip pos="1" side="sl" part="tags"/> </tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
        <b/>
        <var n="prepPron"/>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="det_def Ant" firstChunk="SD">
   <pattern>
    <pattern-item n="det_def"/> <!-- record the determiner somewhere -->
    <pattern-item n="Ant"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="2"/></call-macro>
      <out>
       <chunk name="ant">
        <tags>
         <tag><lit-tag v="SD"/></tag>
         <tag><clip pos="2" side="tl" part="a_gen"/></tag>
         <tag><lit-tag v="sg"/></tag>
        </tags>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="clf Ant" firstChunk="SD">
   <pattern>
    <pattern-item n="clf"/>
    <pattern-item n="Ant"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="2"/></call-macro>
      <out>
       <chunk name="ant">
        <tags>
         <tag><lit-tag v="SD"/></tag>
         <tag><clip pos="2" side="tl" part="a_gen"/></tag>
         <tag><lit-tag v="sg"/></tag>
        </tags>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="np_ant Ant" firstChunk="SD">
   <pattern>
    <pattern-item n="np_ant"/>
    <pattern-item n="Ant"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <out>
       <chunk name="ant">
        <tags>
         <tag><lit-tag v="SD"/></tag>
         <tag><clip pos="2" side="tl" part="a_gen"/></tag>
         <tag><lit-tag v="sg"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
        <b/>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="Ant np_cog" firstChunk="SD">
   <pattern>
    <pattern-item n="Ant"/>
    <pattern-item n="np_cog"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <out>
       <chunk name="ant">
        <tags>
         <tag><lit-tag v="SD"/></tag>
         <tag><clip pos="1" side="tl" part="a_gen"/></tag>
         <tag><lit-tag v="sg"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
        <b/>
        <lu> <clip pos="2" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>


  <rule comment="np_ant" firstChunk="SD">
   <pattern>
    <pattern-item n="np_ant"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <out>
       <chunk name="ant">
        <tags>
         <tag><lit-tag v="SD"/></tag>
         <tag><clip pos="1" side="sl" part="a_gen"/></tag>
         <tag><lit-tag v="sg"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>



  <rule comment="n" firstChunk="N">
   <pattern>
    <pattern-item n="n"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <call-macro n="f_concord1"><with-param pos="1"/></call-macro>
      <call-macro n="f_set_chunk_poss1"><with-param pos="1"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="N"/></tag>
         <tag><var n="chunkGenero"/></tag>
         <tag><var n="chunkNumero"/></tag>
         <tag><var n="chunkPoss"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  <rule comment="pl" firstChunk="Pl">
   <pattern>
    <pattern-item n="pl"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <out>
       <chunk namefrom="chunkName">
        <tags>
         <tag><lit-tag v="Pl"/></tag>
         <tag> <clip pos="1" side="sl" part="tags"/> </tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>



  <rule comment="sent" firstChunk="Punct">
   <pattern>
    <pattern-item n="sent"/>
   </pattern>
   <action>
      <call-macro n="f_set_chunk_name1"><with-param pos="1"/></call-macro>
      <out>
       <chunk name="sent">
        <tags>
         <tag><lit-tag v="Punct"/></tag>
        </tags>
        <lu> <clip pos="1" side="tl" part="whole"/> </lu>
       </chunk>
      </out>
   </action>
  </rule>

  </section-rules>
</transfer>
